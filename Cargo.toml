[workspace]
resolver = "2"
members = ["crates/*"]

[workspace.package]
authors = ["Yagiz Nizipli <yagiz@nizipli.com"]
description = "Pacquet"
edition = "2021"
homepage = "https://github.com/anonrig/pacquet"
keywords = ["Node.js"]
license = "MIT"
repository = "https://github.com/anonrig/pacquet"

[workspace.dependencies]
# Release:
# * Edit these versions, commit
# * cargo ws version --amend --no-git-tag --no-git-push
# publish = true
pacquet_cli = { version = "0.0.1", path = "crates/cli" }

# publish = false
pacquet_registry = { path = "crates/registry" }
pacquet_tarball = { path = "crates/tarball" }
pacquet_package_json = { path = "crates/package_json" }
pacquet_lockfile = { path = "crates/lockfile" }
pacquet_npmrc = { path = "crates/npmrc" }

anyhow = { version = "1.0.71", features = ["backtrace"] }
async-recursion = { version = "1.0.4" }
bytes = { version = "1.4.0" }
clap = { version = "4", features = ["derive"] }
elsa = { version = "1.8.1" }
home = { version = "0.5.5" }
futures-util = { version = "0.3.28" }
reqwest = { version = "0.11", default-features = false, features = [
  "json",
  "stream",
  "native-tls-vendored",
] }
reqwest-middleware = { version = "0.2.2" }
reqwest-retry = { version = "0.2.2" }
node-semver = { version = "2.1.0" }
serde = { version = "1.0.174", features = ["derive"] }
serde_ini = { version = "0.2.0" }
serde_json = { version = "1.0.99" }
serde_yaml = { version = "0.9.1" }
ssri = { version = "9.0.0" }
tar = { version = "0.4.38" }
tempfile = { version = "3.6.0" }
thiserror = { version = "1.0.44" }
tracing = { version = "0.1.37" }
tracing-subscriber = { version = "0.3.17", features = ["env-filter"] }
tokio = { version = "1", features = ["rt", "macros", "rt-multi-thread"] }
libdeflater = { version = "0.14.0" }

[workspace.metadata.workspaces]
allow_branch = "main"

[profile.release]
opt-level = 3
lto = "fat"
codegen-units = 1
strip = "symbols"
debug = false
panic = "abort"   # Let it crash and force ourselves to write safe Rust.

# Use the `--profile release-debug` flag to show symbols in release mode.
# e.g. `cargo build --profile release-debug`
[profile.release-debug]
inherits = "release"
strip = false
debug = true
