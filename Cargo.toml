[workspace]
resolver = "2"
members  = ["crates/*", "tasks/*"]

[workspace.package]
authors     = ["Yagiz Nizipli <yagiz@nizipli.com"]
description = "Pacquet"
edition     = "2021"
homepage    = "https://github.com/anonrig/pacquet"
keywords    = ["nodejs", "package", "manager", "pnpm", "npm"]
license     = "MIT"
repository  = "https://github.com/anonrig/pacquet"

[workspace.dependencies]
# Crates
pacquet_cli          = { path = "crates/cli" }
pacquet_registry     = { path = "crates/registry" }
pacquet_tarball      = { path = "crates/tarball" }
pacquet_package_json = { path = "crates/package_json" }
pacquet_lockfile     = { path = "crates/lockfile" }
pacquet_npmrc        = { path = "crates/npmrc" }
pacquet_executor     = { path = "crates/executor" }
pacquet_cafs         = { path = "crates/cafs" }

# Dependencies
async-trait        = { version = "0.1.72" }
clap               = { version = "4", features = ["derive", "string"] }
home               = { version = "0.5.5" }
insta              = { version = "1.31.0", features = ["yaml", "glob", "walkdir"] }
futures-util       = { version = "0.3.28" }
miette             = { version = "5.9.0", features = ["fancy"] }
reflink-copy       = { version = "0.1.5" }
reqwest            = { version = "0.11", default-features = false, features = ["json", "native-tls-vendored"] }
reqwest-middleware = { version = "0.2.2" }
reqwest-retry      = { version = "0.2.2" }
node-semver        = { version = "2.1.0" }
rayon              = { version = "1.7.0" }
serde              = { version = "1.0.179", features = ["derive"] }
serde_ini          = { version = "0.2.0" }
serde_json         = { version = "1.0.99" }
serde_yaml         = { version = "0.9.1" }
ssri               = { version = "9.0.0" }
tar                = { version = "0.4.38" }
thiserror          = { version = "1.0.44" }
tracing            = { version = "0.1.37" }
tracing-subscriber = { version = "0.3.17", features = ["env-filter"] }
tokio              = { version = "1", features = ["rt-multi-thread", "macros"] }
walkdir            = { version = "2.3.3" }
zune-inflate       = { version = "0.2.54" }


# Dev dependencies
criterion    = { version = "0.5.1", features = ["async_tokio"] }
project-root = { version = "0.2.2" }
tempfile     = { version = "3.6.0" }
mockito      = { version = "1.1.0" }
pico-args    = { version = "0.5.0" }

[workspace.metadata.workspaces]
allow_branch = "main"

[profile.release]
opt-level     = 3
lto           = "fat"
codegen-units = 1
strip         = "symbols"
debug         = false
panic         = "abort"   # Let it crash and force ourselves to write safe Rust.

# Use the `--profile release-debug` flag to show symbols in release mode.
# e.g. `cargo build --profile release-debug`
[profile.release-debug]
inherits = "release"
strip    = false
debug    = true
